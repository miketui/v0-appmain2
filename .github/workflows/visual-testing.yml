name: Visual Testing & Screenshots

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: 
      - 'app/**'
      - 'components/**'
      - 'styles/**'

jobs:
  visual-tests:
    name: Generate Screenshots
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Create screenshots directory
        run: mkdir -p screenshots
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          
      - name: Start application
        run: |
          npm run start &
          sleep 10
        env:
          PORT: 3000
          
      - name: Wait for server
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:3000/api/health; then
              echo "Server is ready"
              break
            fi
            echo "Waiting for server... ($i/30)"
            sleep 2
          done
          
      - name: Run screenshot tests
        run: npx playwright test tests/screenshot.spec.ts
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: route-screenshots
          path: screenshots/
          retention-days: 30
          
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-visual-report
          path: playwright-report/
          retention-days: 7

  accessibility-audit:
    name: Accessibility Testing  
    runs-on: ubuntu-latest
    needs: visual-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Build and start app
        run: |
          npm run build
          npm run start &
          sleep 10
        env:
          NODE_ENV: production
          
      - name: Run accessibility tests
        run: |
          npx playwright test --grep="accessibility" || true
          
      - name: Generate accessibility report
        run: |
          echo "# Accessibility Test Results" > accessibility-report.md
          echo "Generated on: $(date)" >> accessibility-report.md
          echo "" >> accessibility-report.md  
          echo "## Routes Tested" >> accessibility-report.md
          echo "- Home page" >> accessibility-report.md
          echo "- Authentication pages" >> accessibility-report.md
          echo "- Main application routes" >> accessibility-report.md
          
      - name: Upload accessibility report
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: accessibility-report.md
          
  lighthouse-performance:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Start application
        run: |
          npm run start &
          sleep 10
          
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/auth/signin
            http://localhost:3000/feed
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true